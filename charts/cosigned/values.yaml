cosign:
  secretKeyRef:
    name: ""
  # add the values in base64 encoded
  cosignPub: ""

policywebhook:
  image:
    repository: gcr.io/projectsigstore/policy-webhook
    version: sha256:5eb1eb3b56e94721be5d398bff675b799883a8f5880c5f260d365e818c2f2116
    pullPolicy: IfNotPresent
  env: {}
  extraArgs: {}
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  serviceAccount:
    annotations: {}
  securityContext:
    enabled: false
    runAsUser: 65532
  podSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    capabilities:
      drop:
      - all
  service:
    annotations: {}
    type: ClusterIP
    port: 443

webhook:
  name: webhook
  image:
    repository: gcr.io/projectsigstore/cosigned
    # crane digest gcr.io/projectsigstore/cosigned:v1.7.1
    version: sha256:45d88f483c2eeaab4a4437cb0990705f285625d9968c3d6a0419a0b88e5668d3
    pullPolicy: IfNotPresent
  env: {}
  extraArgs: {}
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    enabled: false
    runAsUser: 65532
  podSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsUser: 1000
    capabilities:
      drop:
        - all
  serviceAccount:
    annotations: {}
  service:
    annotations: {}
    type: ClusterIP
    port: 443
    # For nodeport, specify the following:
    #   type: NodePort
    #   nodePort: <port-number>

## common node selector for all the pods
commonNodeSelector: {}
#  key1: value1
#  key2: value2

## common tolerations for all the pods
commonTolerations: []
# - key: "key"
#   operator: "Equal"
#   value: "value"
#   effect: "NoSchedule"

## serviceMonitor makes cosigned metrics discoverable to prometheus
serviceMonitor:
  enabled: false
